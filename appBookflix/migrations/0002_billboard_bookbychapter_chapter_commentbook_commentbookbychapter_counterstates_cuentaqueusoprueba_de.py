# Generated by Django 3.0.7 on 2020-07-07 19:33

import appBookflix.models
import creditcards.models
import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
from django.utils.timezone import utc
import django.utils.timezone


class Migration(migrations.Migration):

    dependencies = [
        ('appBookflix', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Billboard',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50, verbose_name='titulo')),
                ('description', models.TextField(blank=True, null=True, verbose_name='descripcion')),
                ('mostrar_en_home', models.BooleanField(default=False)),
                ('video', models.URLField(blank=True, max_length=255, null=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='autor')),
            ],
            options={
                'verbose_name': 'Publicación',
                'verbose_name_plural': 'Publicaciones',
            },
        ),
        migrations.CreateModel(
            name='BookByChapter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('isbn', models.CharField(max_length=16, unique=True, validators=[appBookflix.models.validateIsbn, appBookflix.models.validateIsbnNum])),
                ('title', models.CharField(max_length=50, verbose_name='titulo')),
                ('cant_chapter', models.IntegerField(default=1, verbose_name='Cantidad de capitulos')),
                ('description', models.TextField(blank=True, null=True, verbose_name='descripcion')),
                ('image', models.ImageField(upload_to='portadas_libros', verbose_name='imagen')),
                ('mostrar_en_home', models.BooleanField(default=False)),
                ('on_normal', models.BooleanField(default=False, verbose_name='ver en normal')),
                ('on_premium', models.BooleanField(default=False, verbose_name='ver en premium')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='appBookflix.Autor', verbose_name='autor')),
                ('editorial', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='appBookflix.Editorial')),
                ('genders', models.ManyToManyField(to='appBookflix.Genero', verbose_name='generos')),
            ],
            options={
                'verbose_name': 'Libro por capítulo',
                'verbose_name_plural': 'Libro por capítulos',
            },
        ),
        migrations.CreateModel(
            name='Chapter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Ingrese el nombre del capítulo, en caso de no tenerlo, su numero de cap, esta información se mostrará al usuario', max_length=50, verbose_name='Titulo del capítulo')),
                ('number', models.IntegerField(help_text='este dato es solo para ordenar las busquedas internas, sepa que si un libro tiene dos capitulos y aquí pone 10 (en vez de 1) , no afectara al libro, pero en el orden se mostrara al final', validators=[appBookflix.models.numerolegal], verbose_name='numero de capitulo')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Descripción del capítulo')),
                ('pdf', models.FileField(upload_to='pdf')),
                ('active', models.BooleanField(default=False, verbose_name='Activado')),
                ('book', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='appBookflix.BookByChapter', verbose_name='libro')),
            ],
            options={
                'verbose_name': 'Capítulo',
                'verbose_name_plural': 'Capítulos',
                'unique_together': {('number', 'book')},
            },
        ),
        migrations.CreateModel(
            name='CommentBook',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_a_spoiler', models.BooleanField(default=False, verbose_name='es espoiler')),
                ('description', models.TextField(verbose_name='descripcion')),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='appBookflix.Profile', verbose_name='perfil')),
                ('publication', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='appBookflix.Libro', verbose_name='publicacion')),
            ],
            options={
                'verbose_name': 'Comentario libro',
                'verbose_name_plural': 'Comentarios libros',
            },
        ),
        migrations.CreateModel(
            name='CommentBookByChapter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_a_spoiler', models.BooleanField(default=False, verbose_name='es espoiler')),
                ('description', models.TextField(verbose_name='descripcion')),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='appBookflix.Profile', verbose_name='perfil')),
                ('publication', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='appBookflix.BookByChapter', verbose_name='publicacion')),
            ],
            options={
                'verbose_name': 'Comentario libro por capítulo',
                'verbose_name_plural': 'Comentarios libros por capítulo',
            },
        ),
        migrations.CreateModel(
            name='MailQueusoPrueba',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mail', models.EmailField(blank=True, max_length=254, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='TarjetaQueUsoPrueba',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero', creditcards.models.CardNumberField(max_length=25)),
            ],
        ),
        migrations.CreateModel(
            name='Trailer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50, verbose_name='titulo')),
                ('description', models.TextField(blank=True, null=True, verbose_name='descripcion')),
                ('mostrar_en_home', models.BooleanField(default=False)),
                ('video', models.URLField(blank=True, max_length=255, null=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='autor')),
                ('book', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='appBookflix.Libro', verbose_name='libro')),
                ('libro_por_capitulo', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='appBookflix.BookByChapter', verbose_name='libro por capitulo')),
            ],
            options={
                'verbose_name': 'Trailer',
                'verbose_name_plural': 'Trailers',
            },
        ),
        migrations.CreateModel(
            name='UserSolicitud',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_of_solicitud', models.CharField(max_length=6, verbose_name='tipo de solicitud')),
                ('type_of_plan', models.CharField(max_length=7, verbose_name='tipo de plan')),
                ('date_of_solicitud', models.DateTimeField(default=django.utils.timezone.now, verbose_name='fecha de solicitud')),
                ('is_accepted', models.IntegerField(default=0)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='usuario')),
            ],
            options={
                'verbose_name': 'Solicitud de usuario',
                'verbose_name_plural': 'Solicitudes de Usuarios',
            },
        ),
        migrations.CreateModel(
            name='UpDownTrailer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('up', models.DateField(default=datetime.datetime(2020, 7, 7, 19, 33, 55, 132572, tzinfo=utc), validators=[appBookflix.models.esCorrecto], verbose_name='DarDeAlta')),
                ('expirationl', models.DateField(default=datetime.datetime(2020, 7, 7, 19, 33, 55, 132572, tzinfo=utc), validators=[appBookflix.models.esCorrecto], verbose_name='DarDeBaja')),
                ('trailer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='appBookflix.Trailer', verbose_name='Publicacion')),
            ],
            options={
                'verbose_name': 'Subir-Bajar-Trailer',
                'verbose_name_plural': 'Subir-Bajar-Trailer',
            },
        ),
        migrations.CreateModel(
            name='UpDownChapter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('up', models.DateField(default=datetime.datetime(2020, 7, 7, 19, 33, 55, 132572, tzinfo=utc), validators=[appBookflix.models.esCorrecto], verbose_name='DarDeAlta')),
                ('expirationl', models.DateField(default=datetime.datetime(2020, 7, 7, 19, 33, 55, 132572, tzinfo=utc), validators=[appBookflix.models.esCorrecto], verbose_name='DarDeBaja')),
                ('chapter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='appBookflix.Chapter', verbose_name='Capitulo')),
            ],
            options={
                'verbose_name': 'Subir-Bajar-Capitulo',
                'verbose_name_plural': 'Subir-Bajar-Capitulos',
            },
        ),
        migrations.CreateModel(
            name='UpDownBookByChapter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('up_normal', models.DateField(default=datetime.datetime(2020, 7, 7, 19, 33, 55, 131572, tzinfo=utc), validators=[appBookflix.models.esCorrecto], verbose_name='pasar a normal')),
                ('expiration_normal', models.DateField(default=datetime.datetime(2020, 7, 7, 19, 33, 55, 131572, tzinfo=utc), validators=[appBookflix.models.esCorrecto], verbose_name='expiracion normal')),
                ('up_premium', models.DateField(default=datetime.datetime(2020, 7, 7, 19, 33, 55, 131572, tzinfo=utc), validators=[appBookflix.models.esCorrecto], verbose_name='pasar a premium')),
                ('expiration_premium', models.DateField(default=datetime.datetime(2020, 7, 7, 19, 33, 55, 131572, tzinfo=utc), validators=[appBookflix.models.esCorrecto], verbose_name='expiracion premium')),
                ('book', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='appBookflix.BookByChapter', verbose_name='libro')),
            ],
            options={
                'verbose_name': 'Subir-Bajar-LibroPorCapitulo',
                'verbose_name_plural': 'Subir-Bajar-LibroPorCapitulo',
            },
        ),
        migrations.CreateModel(
            name='UpDownBook',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('up_normal', models.DateField(default=datetime.datetime(2020, 7, 7, 19, 33, 55, 131572, tzinfo=utc), validators=[appBookflix.models.esCorrecto], verbose_name='pasar a normal')),
                ('expiration_normal', models.DateField(default=datetime.datetime(2020, 7, 7, 19, 33, 55, 131572, tzinfo=utc), validators=[appBookflix.models.esCorrecto], verbose_name='expiracion normal')),
                ('up_premium', models.DateField(default=datetime.datetime(2020, 7, 7, 19, 33, 55, 131572, tzinfo=utc), validators=[appBookflix.models.esCorrecto], verbose_name='pasar a premium')),
                ('expiration_premium', models.DateField(default=datetime.datetime(2020, 7, 7, 19, 33, 55, 131572, tzinfo=utc), validators=[appBookflix.models.esCorrecto], verbose_name='expiracion premium')),
                ('book', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='appBookflix.Libro', verbose_name='libro')),
            ],
            options={
                'verbose_name': 'Subir-Bajar-Libro',
                'verbose_name_plural': 'Subir-Bajar-Libro',
            },
        ),
        migrations.CreateModel(
            name='UpDownBillboard',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('up', models.DateField(default=datetime.datetime(2020, 7, 7, 19, 33, 55, 132572, tzinfo=utc), validators=[appBookflix.models.esCorrecto], verbose_name='DarDeAlta')),
                ('expirationl', models.DateField(default=datetime.datetime(2020, 7, 7, 19, 33, 55, 132572, tzinfo=utc), validators=[appBookflix.models.esCorrecto], verbose_name='DarDeBaja')),
                ('Billboard', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='appBookflix.Billboard', verbose_name='Publicacion')),
            ],
            options={
                'verbose_name': 'Subir-Bajar-Publicacion',
                'verbose_name_plural': 'Subir-Bajar-Publicaciones',
            },
        ),
        migrations.CreateModel(
            name='LikeBookByChapter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('points', models.IntegerField(default=False, verbose_name='Puntos')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='appBookflix.Profile', verbose_name='autor')),
                ('book', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='appBookflix.BookByChapter', verbose_name='libro')),
            ],
            options={
                'verbose_name': 'Me gusta libro Por Capitulo',
                'verbose_name_plural': 'Me gusta/s libros por Capitulo',
            },
        ),
        migrations.CreateModel(
            name='Like',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('points', models.IntegerField(default=False, verbose_name='Puntos')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='appBookflix.Profile', verbose_name='autor')),
                ('book', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='appBookflix.Libro', verbose_name='libro')),
            ],
            options={
                'verbose_name': 'Me gusta libro',
                'verbose_name_plural': 'Me gusta/s libros',
            },
        ),
        migrations.CreateModel(
            name='LibroPorCapituloFavorito',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('isbn', models.CharField(max_length=16, unique=True, validators=[appBookflix.models.validateIsbn, appBookflix.models.validateIsbnNum])),
                ('book', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='appBookflix.BookByChapter', verbose_name='libro')),
                ('profile', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='appBookflix.Profile', verbose_name='perfil')),
            ],
            options={
                'verbose_name': 'Libro por capitulo favorito',
                'verbose_name_plural': 'Libros por capitulos favoritos',
            },
        ),
        migrations.CreateModel(
            name='LibroFavorito',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('isbn', models.CharField(max_length=16, unique=True, validators=[appBookflix.models.validateIsbn, appBookflix.models.validateIsbnNum])),
                ('book', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='appBookflix.Libro', verbose_name='libro')),
                ('profile', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='appBookflix.Profile', verbose_name='perfil')),
            ],
            options={
                'verbose_name': 'Libro favorito',
                'verbose_name_plural': 'Libros favoritos',
            },
        ),
        migrations.CreateModel(
            name='DenunciarComentarioLibroPorCap',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comentario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='appBookflix.CommentBookByChapter')),
            ],
        ),
        migrations.CreateModel(
            name='DenunciarComentarioLibro',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comentario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='appBookflix.CommentBook')),
            ],
        ),
        migrations.CreateModel(
            name='CuentaqueUsoPrueba',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('usuario', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='CounterStates',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_start', models.DateField(verbose_name='fecha de inicio')),
                ('cant_reading', models.IntegerField(default=0, verbose_name='leyendo')),
                ('cant_future_read', models.IntegerField(default=0, verbose_name='en futuras lecturas')),
                ('cant_finished', models.IntegerField(default=0, verbose_name='terminados')),
                ('publication', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='appBookflix.Libro', verbose_name='publicacion')),
            ],
            options={
                'verbose_name': 'Estadística de libro',
                'verbose_name_plural': 'Estadísticas de libros',
            },
        ),
        migrations.CreateModel(
            name='StateOfBookByChapter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(default=django.utils.timezone.now, verbose_name='fecha')),
                ('state', models.CharField(blank=True, choices=[('reading', 'leyendo'), ('future_reading', 'futura lectura'), ('finished', 'terminado')], default='finished', max_length=16, null=True, verbose_name='estado')),
                ('book', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='appBookflix.BookByChapter', verbose_name='libro')),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='appBookflix.Profile', verbose_name='perfil')),
            ],
            options={
                'verbose_name': 'Estado del libro por capítulo',
                'verbose_name_plural': 'Estados de libros por capítulo',
                'unique_together': {('book', 'profile')},
            },
        ),
        migrations.CreateModel(
            name='StateOfBook',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(default=django.utils.timezone.now, verbose_name='fecha')),
                ('state', models.CharField(blank=True, choices=[('reading', 'leyendo'), ('future_reading', 'futura lectura'), ('finished', 'terminado')], default='finished', max_length=16, null=True, verbose_name='estado')),
                ('book', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='appBookflix.Libro', verbose_name='libro')),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='appBookflix.Profile', verbose_name='perfil')),
            ],
            options={
                'verbose_name': 'Estado del libro',
                'verbose_name_plural': 'Estados del libro',
                'unique_together': {('book', 'profile')},
            },
        ),
        migrations.CreateModel(
            name='LikeCommentBookByChapter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_like', models.BooleanField(default=False, verbose_name='me gusta')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='appBookflix.Profile', verbose_name='autor')),
                ('comment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='appBookflix.CommentBookByChapter', verbose_name='comentario')),
            ],
            options={
                'verbose_name': 'Me gusta de comentario',
                'verbose_name_plural': 'Me gustas/s de comentarios',
                'unique_together': {('author', 'comment')},
            },
        ),
        migrations.CreateModel(
            name='LikeCommentBook',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_like', models.BooleanField(default=False, verbose_name='me gusta')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='appBookflix.Profile', verbose_name='autor')),
                ('comment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='appBookflix.CommentBook', verbose_name='comentario')),
            ],
            options={
                'verbose_name': 'Me gusta de comentario',
                'verbose_name_plural': 'Me gustas/s de comentarios',
                'unique_together': {('author', 'comment')},
            },
        ),
    ]
